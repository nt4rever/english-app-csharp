<UserControl x:Class="Page_Navigation_App.View.Grammar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vm="clr-namespace:Page_Navigation_App.ViewModel"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="622"
             Style="{StaticResource Page_Style}"
             TextElement.Foreground="#fff"
             >
    <UserControl.DataContext>
        <vm:GrammarVM />
    </UserControl.DataContext>
    <Grid>
        <Border CornerRadius="0,20,20,0">
            <Border.Background>
                <ImageBrush ImageSource="/Images/grammar_page.png"
                            Stretch="None" />
            </Border.Background>
        </Border>
        <Button HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="55" Height="55" HorizontalContentAlignment="Left" BorderBrush="{x:Null}" Foreground="{x:Null}" Margin="509,0,0,499" Click="OnCheckGrammar">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="15"/>
                </Style>
            </Button.Resources>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="AliceBlue"/>
                            <Setter Property="Opacity" Value="0.1"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button HorizontalAlignment="Left" VerticalAlignment="Top" Width="40" Height="40" HorizontalContentAlignment="Left" BorderBrush="{x:Null}" Foreground="{x:Null}" Margin="523,265,0,0" Click="onClickVoice">
            <Button.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="25"/>
                </Style>
            </Button.Resources>
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="AliceBlue"/>
                            <Setter Property="Opacity" Value="0.1"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="17*"></RowDefinition>
                <RowDefinition Height="13*"></RowDefinition>
            </Grid.RowDefinitions>

            <DataGrid Name="tableSpell" Grid.Row="1" IsReadOnly="True" Margin="55,0,56,38" CurrentCellChanged="tableSpell_CurrentCellChanged">
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Message" Width="350">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock 
                        Text="{Binding Message}" 
                        TextWrapping="Wrap"
                        />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn Header="Replacement" Width="150">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock 
                        Text="{Binding Replacement}" 
                        TextWrapping="Wrap"
                        />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <TextBox
                Name="txtSpell"
                Grid.Row="0"
                Background="Transparent"
                TextWrapping="Wrap"
                AcceptsReturn="True"
                BorderThickness="0"
                Foreground="#fff"
                FontSize="16"
                FontFamily="/Fonts/#Rubik Regular"
                CaretBrush="#fff"
                VerticalScrollBarVisibility="Auto"
                materialDesign:TextFieldAssist.DecorationVisibility="Hidden" Margin="72,141,88,0" Height="159" VerticalAlignment="Top"
            >
            </TextBox>
        </Grid>
    </Grid>
</UserControl>
